/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './app/routes/__root'
import { Route as PublicImport } from './app/routes/_public'
import { Route as AdminImport } from './app/routes/_admin'
import { Route as PublicSignUpImport } from './app/routes/_public/sign-up'
import { Route as AdminDmIndexImport } from './app/routes/_admin/dm/index'
import { Route as PublicDUsernameIndexImport } from './app/routes/_public/d/$username/index'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const PublicLoginLazyImport = createFileRoute('/_public/login')()
const AdminSettingsLazyImport = createFileRoute('/_admin/settings')()
const AdminMyProfileLazyImport = createFileRoute('/_admin/my-profile')()
const AdminHomeLazyImport = createFileRoute('/_admin/home')()
const AdminHelloLazyImport = createFileRoute('/_admin/hello')()
const AdminAnalyticsLazyImport = createFileRoute('/_admin/analytics')()
const AdminServicesIndexLazyImport = createFileRoute('/_admin/services/')()
const AdminFormsIndexLazyImport = createFileRoute('/_admin/forms/')()
const AdminDashboardIndexLazyImport = createFileRoute('/_admin/dashboard/')()
const AdminCalendarIndexLazyImport = createFileRoute('/_admin/calendar/')()
const AdminBookingsIndexLazyImport = createFileRoute('/_admin/bookings/')()
const AdminAvailabilityIndexLazyImport = createFileRoute(
  '/_admin/availability/',
)()
const AdminServicesAddLazyImport = createFileRoute('/_admin/services/add')()
const AdminFormsNewLazyImport = createFileRoute('/_admin/forms/new')()
const AdminFormsFormIdIndexLazyImport = createFileRoute(
  '/_admin/forms/$formId/',
)()
const PublicDUsernameServiceIdIndexLazyImport = createFileRoute(
  '/_public/d/$username/$serviceId/',
)()

// Create/Update Routes

const PublicRoute = PublicImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  id: '/_admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./app/routes/index.lazy').then((d) => d.Route))

const PublicLoginLazyRoute = PublicLoginLazyImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => PublicRoute,
} as any).lazy(() =>
  import('./app/routes/_public/login.lazy').then((d) => d.Route),
)

const AdminSettingsLazyRoute = AdminSettingsLazyImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AdminRoute,
} as any).lazy(() =>
  import('./app/routes/_admin/settings.lazy').then((d) => d.Route),
)

const AdminMyProfileLazyRoute = AdminMyProfileLazyImport.update({
  id: '/my-profile',
  path: '/my-profile',
  getParentRoute: () => AdminRoute,
} as any).lazy(() =>
  import('./app/routes/_admin/my-profile.lazy').then((d) => d.Route),
)

const AdminHomeLazyRoute = AdminHomeLazyImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => AdminRoute,
} as any).lazy(() =>
  import('./app/routes/_admin/home.lazy').then((d) => d.Route),
)

const AdminHelloLazyRoute = AdminHelloLazyImport.update({
  id: '/hello',
  path: '/hello',
  getParentRoute: () => AdminRoute,
} as any).lazy(() =>
  import('./app/routes/_admin/hello.lazy').then((d) => d.Route),
)

const AdminAnalyticsLazyRoute = AdminAnalyticsLazyImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => AdminRoute,
} as any).lazy(() =>
  import('./app/routes/_admin/analytics.lazy').then((d) => d.Route),
)

const PublicSignUpRoute = PublicSignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => PublicRoute,
} as any)

const AdminServicesIndexLazyRoute = AdminServicesIndexLazyImport.update({
  id: '/services/',
  path: '/services/',
  getParentRoute: () => AdminRoute,
} as any).lazy(() =>
  import('./app/routes/_admin/services/index.lazy').then((d) => d.Route),
)

const AdminFormsIndexLazyRoute = AdminFormsIndexLazyImport.update({
  id: '/forms/',
  path: '/forms/',
  getParentRoute: () => AdminRoute,
} as any).lazy(() =>
  import('./app/routes/_admin/forms/index.lazy').then((d) => d.Route),
)

const AdminDashboardIndexLazyRoute = AdminDashboardIndexLazyImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => AdminRoute,
} as any).lazy(() =>
  import('./app/routes/_admin/dashboard/index.lazy').then((d) => d.Route),
)

const AdminCalendarIndexLazyRoute = AdminCalendarIndexLazyImport.update({
  id: '/calendar/',
  path: '/calendar/',
  getParentRoute: () => AdminRoute,
} as any).lazy(() =>
  import('./app/routes/_admin/calendar/index.lazy').then((d) => d.Route),
)

const AdminBookingsIndexLazyRoute = AdminBookingsIndexLazyImport.update({
  id: '/bookings/',
  path: '/bookings/',
  getParentRoute: () => AdminRoute,
} as any).lazy(() =>
  import('./app/routes/_admin/bookings/index.lazy').then((d) => d.Route),
)

const AdminAvailabilityIndexLazyRoute = AdminAvailabilityIndexLazyImport.update(
  {
    id: '/availability/',
    path: '/availability/',
    getParentRoute: () => AdminRoute,
  } as any,
).lazy(() =>
  import('./app/routes/_admin/availability/index.lazy').then((d) => d.Route),
)

const AdminDmIndexRoute = AdminDmIndexImport.update({
  id: '/dm/',
  path: '/dm/',
  getParentRoute: () => AdminRoute,
} as any)

const AdminServicesAddLazyRoute = AdminServicesAddLazyImport.update({
  id: '/services/add',
  path: '/services/add',
  getParentRoute: () => AdminRoute,
} as any).lazy(() =>
  import('./app/routes/_admin/services/add.lazy').then((d) => d.Route),
)

const AdminFormsNewLazyRoute = AdminFormsNewLazyImport.update({
  id: '/forms/new',
  path: '/forms/new',
  getParentRoute: () => AdminRoute,
} as any).lazy(() =>
  import('./app/routes/_admin/forms/new.lazy').then((d) => d.Route),
)

const AdminFormsFormIdIndexLazyRoute = AdminFormsFormIdIndexLazyImport.update({
  id: '/forms/$formId/',
  path: '/forms/$formId/',
  getParentRoute: () => AdminRoute,
} as any).lazy(() =>
  import('./app/routes/_admin/forms/$formId/index.lazy').then((d) => d.Route),
)

const PublicDUsernameIndexRoute = PublicDUsernameIndexImport.update({
  id: '/d/$username/',
  path: '/d/$username/',
  getParentRoute: () => PublicRoute,
} as any).lazy(() =>
  import('./app/routes/_public/d/$username/index.lazy').then((d) => d.Route),
)

const PublicDUsernameServiceIdIndexLazyRoute =
  PublicDUsernameServiceIdIndexLazyImport.update({
    id: '/d/$username/$serviceId/',
    path: '/d/$username/$serviceId/',
    getParentRoute: () => PublicRoute,
  } as any).lazy(() =>
    import('./app/routes/_public/d/$username/$serviceId/index.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_admin': {
      id: '/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicImport
      parentRoute: typeof rootRoute
    }
    '/_public/sign-up': {
      id: '/_public/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof PublicSignUpImport
      parentRoute: typeof PublicImport
    }
    '/_admin/analytics': {
      id: '/_admin/analytics'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof AdminAnalyticsLazyImport
      parentRoute: typeof AdminImport
    }
    '/_admin/hello': {
      id: '/_admin/hello'
      path: '/hello'
      fullPath: '/hello'
      preLoaderRoute: typeof AdminHelloLazyImport
      parentRoute: typeof AdminImport
    }
    '/_admin/home': {
      id: '/_admin/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AdminHomeLazyImport
      parentRoute: typeof AdminImport
    }
    '/_admin/my-profile': {
      id: '/_admin/my-profile'
      path: '/my-profile'
      fullPath: '/my-profile'
      preLoaderRoute: typeof AdminMyProfileLazyImport
      parentRoute: typeof AdminImport
    }
    '/_admin/settings': {
      id: '/_admin/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AdminSettingsLazyImport
      parentRoute: typeof AdminImport
    }
    '/_public/login': {
      id: '/_public/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof PublicLoginLazyImport
      parentRoute: typeof PublicImport
    }
    '/_admin/forms/new': {
      id: '/_admin/forms/new'
      path: '/forms/new'
      fullPath: '/forms/new'
      preLoaderRoute: typeof AdminFormsNewLazyImport
      parentRoute: typeof AdminImport
    }
    '/_admin/services/add': {
      id: '/_admin/services/add'
      path: '/services/add'
      fullPath: '/services/add'
      preLoaderRoute: typeof AdminServicesAddLazyImport
      parentRoute: typeof AdminImport
    }
    '/_admin/dm/': {
      id: '/_admin/dm/'
      path: '/dm'
      fullPath: '/dm'
      preLoaderRoute: typeof AdminDmIndexImport
      parentRoute: typeof AdminImport
    }
    '/_admin/availability/': {
      id: '/_admin/availability/'
      path: '/availability'
      fullPath: '/availability'
      preLoaderRoute: typeof AdminAvailabilityIndexLazyImport
      parentRoute: typeof AdminImport
    }
    '/_admin/bookings/': {
      id: '/_admin/bookings/'
      path: '/bookings'
      fullPath: '/bookings'
      preLoaderRoute: typeof AdminBookingsIndexLazyImport
      parentRoute: typeof AdminImport
    }
    '/_admin/calendar/': {
      id: '/_admin/calendar/'
      path: '/calendar'
      fullPath: '/calendar'
      preLoaderRoute: typeof AdminCalendarIndexLazyImport
      parentRoute: typeof AdminImport
    }
    '/_admin/dashboard/': {
      id: '/_admin/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AdminDashboardIndexLazyImport
      parentRoute: typeof AdminImport
    }
    '/_admin/forms/': {
      id: '/_admin/forms/'
      path: '/forms'
      fullPath: '/forms'
      preLoaderRoute: typeof AdminFormsIndexLazyImport
      parentRoute: typeof AdminImport
    }
    '/_admin/services/': {
      id: '/_admin/services/'
      path: '/services'
      fullPath: '/services'
      preLoaderRoute: typeof AdminServicesIndexLazyImport
      parentRoute: typeof AdminImport
    }
    '/_public/d/$username/': {
      id: '/_public/d/$username/'
      path: '/d/$username'
      fullPath: '/d/$username'
      preLoaderRoute: typeof PublicDUsernameIndexImport
      parentRoute: typeof PublicImport
    }
    '/_admin/forms/$formId/': {
      id: '/_admin/forms/$formId/'
      path: '/forms/$formId'
      fullPath: '/forms/$formId'
      preLoaderRoute: typeof AdminFormsFormIdIndexLazyImport
      parentRoute: typeof AdminImport
    }
    '/_public/d/$username/$serviceId/': {
      id: '/_public/d/$username/$serviceId/'
      path: '/d/$username/$serviceId'
      fullPath: '/d/$username/$serviceId'
      preLoaderRoute: typeof PublicDUsernameServiceIdIndexLazyImport
      parentRoute: typeof PublicImport
    }
  }
}

// Create and export the route tree

interface AdminRouteChildren {
  AdminAnalyticsLazyRoute: typeof AdminAnalyticsLazyRoute
  AdminHelloLazyRoute: typeof AdminHelloLazyRoute
  AdminHomeLazyRoute: typeof AdminHomeLazyRoute
  AdminMyProfileLazyRoute: typeof AdminMyProfileLazyRoute
  AdminSettingsLazyRoute: typeof AdminSettingsLazyRoute
  AdminFormsNewLazyRoute: typeof AdminFormsNewLazyRoute
  AdminServicesAddLazyRoute: typeof AdminServicesAddLazyRoute
  AdminDmIndexRoute: typeof AdminDmIndexRoute
  AdminAvailabilityIndexLazyRoute: typeof AdminAvailabilityIndexLazyRoute
  AdminBookingsIndexLazyRoute: typeof AdminBookingsIndexLazyRoute
  AdminCalendarIndexLazyRoute: typeof AdminCalendarIndexLazyRoute
  AdminDashboardIndexLazyRoute: typeof AdminDashboardIndexLazyRoute
  AdminFormsIndexLazyRoute: typeof AdminFormsIndexLazyRoute
  AdminServicesIndexLazyRoute: typeof AdminServicesIndexLazyRoute
  AdminFormsFormIdIndexLazyRoute: typeof AdminFormsFormIdIndexLazyRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminAnalyticsLazyRoute: AdminAnalyticsLazyRoute,
  AdminHelloLazyRoute: AdminHelloLazyRoute,
  AdminHomeLazyRoute: AdminHomeLazyRoute,
  AdminMyProfileLazyRoute: AdminMyProfileLazyRoute,
  AdminSettingsLazyRoute: AdminSettingsLazyRoute,
  AdminFormsNewLazyRoute: AdminFormsNewLazyRoute,
  AdminServicesAddLazyRoute: AdminServicesAddLazyRoute,
  AdminDmIndexRoute: AdminDmIndexRoute,
  AdminAvailabilityIndexLazyRoute: AdminAvailabilityIndexLazyRoute,
  AdminBookingsIndexLazyRoute: AdminBookingsIndexLazyRoute,
  AdminCalendarIndexLazyRoute: AdminCalendarIndexLazyRoute,
  AdminDashboardIndexLazyRoute: AdminDashboardIndexLazyRoute,
  AdminFormsIndexLazyRoute: AdminFormsIndexLazyRoute,
  AdminServicesIndexLazyRoute: AdminServicesIndexLazyRoute,
  AdminFormsFormIdIndexLazyRoute: AdminFormsFormIdIndexLazyRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

interface PublicRouteChildren {
  PublicSignUpRoute: typeof PublicSignUpRoute
  PublicLoginLazyRoute: typeof PublicLoginLazyRoute
  PublicDUsernameIndexRoute: typeof PublicDUsernameIndexRoute
  PublicDUsernameServiceIdIndexLazyRoute: typeof PublicDUsernameServiceIdIndexLazyRoute
}

const PublicRouteChildren: PublicRouteChildren = {
  PublicSignUpRoute: PublicSignUpRoute,
  PublicLoginLazyRoute: PublicLoginLazyRoute,
  PublicDUsernameIndexRoute: PublicDUsernameIndexRoute,
  PublicDUsernameServiceIdIndexLazyRoute:
    PublicDUsernameServiceIdIndexLazyRoute,
}

const PublicRouteWithChildren =
  PublicRoute._addFileChildren(PublicRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '': typeof PublicRouteWithChildren
  '/sign-up': typeof PublicSignUpRoute
  '/analytics': typeof AdminAnalyticsLazyRoute
  '/hello': typeof AdminHelloLazyRoute
  '/home': typeof AdminHomeLazyRoute
  '/my-profile': typeof AdminMyProfileLazyRoute
  '/settings': typeof AdminSettingsLazyRoute
  '/login': typeof PublicLoginLazyRoute
  '/forms/new': typeof AdminFormsNewLazyRoute
  '/services/add': typeof AdminServicesAddLazyRoute
  '/dm': typeof AdminDmIndexRoute
  '/availability': typeof AdminAvailabilityIndexLazyRoute
  '/bookings': typeof AdminBookingsIndexLazyRoute
  '/calendar': typeof AdminCalendarIndexLazyRoute
  '/dashboard': typeof AdminDashboardIndexLazyRoute
  '/forms': typeof AdminFormsIndexLazyRoute
  '/services': typeof AdminServicesIndexLazyRoute
  '/d/$username': typeof PublicDUsernameIndexRoute
  '/forms/$formId': typeof AdminFormsFormIdIndexLazyRoute
  '/d/$username/$serviceId': typeof PublicDUsernameServiceIdIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '': typeof PublicRouteWithChildren
  '/sign-up': typeof PublicSignUpRoute
  '/analytics': typeof AdminAnalyticsLazyRoute
  '/hello': typeof AdminHelloLazyRoute
  '/home': typeof AdminHomeLazyRoute
  '/my-profile': typeof AdminMyProfileLazyRoute
  '/settings': typeof AdminSettingsLazyRoute
  '/login': typeof PublicLoginLazyRoute
  '/forms/new': typeof AdminFormsNewLazyRoute
  '/services/add': typeof AdminServicesAddLazyRoute
  '/dm': typeof AdminDmIndexRoute
  '/availability': typeof AdminAvailabilityIndexLazyRoute
  '/bookings': typeof AdminBookingsIndexLazyRoute
  '/calendar': typeof AdminCalendarIndexLazyRoute
  '/dashboard': typeof AdminDashboardIndexLazyRoute
  '/forms': typeof AdminFormsIndexLazyRoute
  '/services': typeof AdminServicesIndexLazyRoute
  '/d/$username': typeof PublicDUsernameIndexRoute
  '/forms/$formId': typeof AdminFormsFormIdIndexLazyRoute
  '/d/$username/$serviceId': typeof PublicDUsernameServiceIdIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/_admin': typeof AdminRouteWithChildren
  '/_public': typeof PublicRouteWithChildren
  '/_public/sign-up': typeof PublicSignUpRoute
  '/_admin/analytics': typeof AdminAnalyticsLazyRoute
  '/_admin/hello': typeof AdminHelloLazyRoute
  '/_admin/home': typeof AdminHomeLazyRoute
  '/_admin/my-profile': typeof AdminMyProfileLazyRoute
  '/_admin/settings': typeof AdminSettingsLazyRoute
  '/_public/login': typeof PublicLoginLazyRoute
  '/_admin/forms/new': typeof AdminFormsNewLazyRoute
  '/_admin/services/add': typeof AdminServicesAddLazyRoute
  '/_admin/dm/': typeof AdminDmIndexRoute
  '/_admin/availability/': typeof AdminAvailabilityIndexLazyRoute
  '/_admin/bookings/': typeof AdminBookingsIndexLazyRoute
  '/_admin/calendar/': typeof AdminCalendarIndexLazyRoute
  '/_admin/dashboard/': typeof AdminDashboardIndexLazyRoute
  '/_admin/forms/': typeof AdminFormsIndexLazyRoute
  '/_admin/services/': typeof AdminServicesIndexLazyRoute
  '/_public/d/$username/': typeof PublicDUsernameIndexRoute
  '/_admin/forms/$formId/': typeof AdminFormsFormIdIndexLazyRoute
  '/_public/d/$username/$serviceId/': typeof PublicDUsernameServiceIdIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/sign-up'
    | '/analytics'
    | '/hello'
    | '/home'
    | '/my-profile'
    | '/settings'
    | '/login'
    | '/forms/new'
    | '/services/add'
    | '/dm'
    | '/availability'
    | '/bookings'
    | '/calendar'
    | '/dashboard'
    | '/forms'
    | '/services'
    | '/d/$username'
    | '/forms/$formId'
    | '/d/$username/$serviceId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/sign-up'
    | '/analytics'
    | '/hello'
    | '/home'
    | '/my-profile'
    | '/settings'
    | '/login'
    | '/forms/new'
    | '/services/add'
    | '/dm'
    | '/availability'
    | '/bookings'
    | '/calendar'
    | '/dashboard'
    | '/forms'
    | '/services'
    | '/d/$username'
    | '/forms/$formId'
    | '/d/$username/$serviceId'
  id:
    | '__root__'
    | '/'
    | '/_admin'
    | '/_public'
    | '/_public/sign-up'
    | '/_admin/analytics'
    | '/_admin/hello'
    | '/_admin/home'
    | '/_admin/my-profile'
    | '/_admin/settings'
    | '/_public/login'
    | '/_admin/forms/new'
    | '/_admin/services/add'
    | '/_admin/dm/'
    | '/_admin/availability/'
    | '/_admin/bookings/'
    | '/_admin/calendar/'
    | '/_admin/dashboard/'
    | '/_admin/forms/'
    | '/_admin/services/'
    | '/_public/d/$username/'
    | '/_admin/forms/$formId/'
    | '/_public/d/$username/$serviceId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AdminRoute: typeof AdminRouteWithChildren
  PublicRoute: typeof PublicRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AdminRoute: AdminRouteWithChildren,
  PublicRoute: PublicRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_admin",
        "/_public"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/_admin": {
      "filePath": "_admin.tsx",
      "children": [
        "/_admin/analytics",
        "/_admin/hello",
        "/_admin/home",
        "/_admin/my-profile",
        "/_admin/settings",
        "/_admin/forms/new",
        "/_admin/services/add",
        "/_admin/dm/",
        "/_admin/availability/",
        "/_admin/bookings/",
        "/_admin/calendar/",
        "/_admin/dashboard/",
        "/_admin/forms/",
        "/_admin/services/",
        "/_admin/forms/$formId/"
      ]
    },
    "/_public": {
      "filePath": "_public.tsx",
      "children": [
        "/_public/sign-up",
        "/_public/login",
        "/_public/d/$username/",
        "/_public/d/$username/$serviceId/"
      ]
    },
    "/_public/sign-up": {
      "filePath": "_public/sign-up.tsx",
      "parent": "/_public"
    },
    "/_admin/analytics": {
      "filePath": "_admin/analytics.lazy.tsx",
      "parent": "/_admin"
    },
    "/_admin/hello": {
      "filePath": "_admin/hello.lazy.tsx",
      "parent": "/_admin"
    },
    "/_admin/home": {
      "filePath": "_admin/home.lazy.tsx",
      "parent": "/_admin"
    },
    "/_admin/my-profile": {
      "filePath": "_admin/my-profile.lazy.tsx",
      "parent": "/_admin"
    },
    "/_admin/settings": {
      "filePath": "_admin/settings.lazy.tsx",
      "parent": "/_admin"
    },
    "/_public/login": {
      "filePath": "_public/login.lazy.tsx",
      "parent": "/_public"
    },
    "/_admin/forms/new": {
      "filePath": "_admin/forms/new.lazy.tsx",
      "parent": "/_admin"
    },
    "/_admin/services/add": {
      "filePath": "_admin/services/add.lazy.tsx",
      "parent": "/_admin"
    },
    "/_admin/dm/": {
      "filePath": "_admin/dm/index.tsx",
      "parent": "/_admin"
    },
    "/_admin/availability/": {
      "filePath": "_admin/availability/index.lazy.tsx",
      "parent": "/_admin"
    },
    "/_admin/bookings/": {
      "filePath": "_admin/bookings/index.lazy.tsx",
      "parent": "/_admin"
    },
    "/_admin/calendar/": {
      "filePath": "_admin/calendar/index.lazy.tsx",
      "parent": "/_admin"
    },
    "/_admin/dashboard/": {
      "filePath": "_admin/dashboard/index.lazy.tsx",
      "parent": "/_admin"
    },
    "/_admin/forms/": {
      "filePath": "_admin/forms/index.lazy.tsx",
      "parent": "/_admin"
    },
    "/_admin/services/": {
      "filePath": "_admin/services/index.lazy.tsx",
      "parent": "/_admin"
    },
    "/_public/d/$username/": {
      "filePath": "_public/d/$username/index.tsx",
      "parent": "/_public"
    },
    "/_admin/forms/$formId/": {
      "filePath": "_admin/forms/$formId/index.lazy.tsx",
      "parent": "/_admin"
    },
    "/_public/d/$username/$serviceId/": {
      "filePath": "_public/d/$username/$serviceId/index.lazy.tsx",
      "parent": "/_public"
    }
  }
}
ROUTE_MANIFEST_END */
